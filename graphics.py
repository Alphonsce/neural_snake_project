import pygame
from constans import *



class Button():
    def __init__(self, text, x, y, w, h) -> None:
        """ Класс кнопка. При создании получает входные:
        text - надпись на кнопке
        x, y - положение кнопки
        w, h - ширина и высота кнопки
        """
        pass 

    def check_pressed(self, x, y):
        """ Функция проверяет попадает ли мышь 
        в прямоугольник данной кнопки"""
        pass
        return False # FIXME

    def draw_button(self):
        """ Отрисовывает кнопку
        Должна менять цвет или выделяться при наведении"""
        pass

def draw_start_menu(buttons):
    """ На стартовом экране Не должно быть видно будущего поля.
    На дисплей должно выводиться Меню с кнопками типа Button:
    SINGLE PLAYER
    PLAYER VS AI
    JUST AI
    STATICS
    EXIT

    Эти кнопки лежат в массиве buttons
    На задний план потом можно наложить принтскрин из игры
    Меню неподвижно, так что достаточно сделать правильную реализацию
    """
    pass

def draw_field(cells):
    """ Функция рисует поле.
    Первоначльно она должна нарисовать темное поле
    Исходя из массива надо нарисовать квадратики в клеточках: 
    cells - массив чисел. Соответствия устанавливаются с помощью 
    класса Cell в модуле constans
    Фрукт - красный (занимает 80% ширины и высоты клетки)
    Змея - зеленая (занимает 80% ширины и высоты клетки)
    Голова - Зеленая (занимает 100% ширины и высоты клетки)
    Также для каждой части змеи надо сделать соединение между двумя клеточками -
    Салатовая, например(занимает 80% ширины или высоты клетки)
    """
    pass

def draw_text(text, size, x, y, colour, surf):
    """ Функция располагает текст на заданном холсте
    ОПОРНОЙ ТОЧКОЙ ЯВЛЯЕТСЯ СЕРЕДИНА ВЕРХА ТЕКСТА
    text: строка, вывод которой предполагается
    size: размер шрифта в пикселях
    x, y: положение опорной точки текста
    colour: цвет текста
    surf: холст, на который пишется
    """
    font = pygame.font.SysFont(TEXT_FONT, size)
    text_surface = font.render(text, True, colour)
    text_rect = text_surface.get_rect()
    text_rect.midtop = (x, y)
    surf.blit(text_surface, text_rect)

if __name__ == "__main__":
    print("This is not main file")